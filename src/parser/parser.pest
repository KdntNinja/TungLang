// The main rule that defines a `.tung` file.
// A file consists of zero or more statements, each optionally followed by a newline, and ends with EOI (End of Input).
file = { SOI ~ (statement ~ NEWLINE*)* ~ EOI }

// Comments are allowed anywhere and should be skipped
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* ~ (NEWLINE | EOI) }

// A statement can be an assignment, function call, or control structure.
statement = { assignment | function_call | if_statement }

// Assignment with expression as value
assignment = { identifier ~ "=" ~ expression }

// Function call with optional arguments
function_call = { identifier ~ "(" ~ (expression ~ ("," ~ expression)*)? ~ ")" }

// If statement - simplified
if_statement = { 
    "if" ~ ("(" ~ expression ~ ")" | expression) ~ ":" ~ NEWLINE* ~
    statement* ~
    "endif"
}

// Expression
expression = { comparison | term }

// Comparison expression
comparison = { term ~ comparison_op ~ term }

// Term
term = { factor ~ (operator ~ factor)* }

// Factor
factor = { identifier | value | "(" ~ expression ~ ")" }

// Arithmetic operators
operator = { "+" | "-" | "*" | "/" }
// Comparison operators
comparison_op = { "==" | "!=" | "<" | ">" | "<=" | ">=" }

// Identifiers
identifier = @{ ASCII_ALPHANUMERIC+ }

// Values
value = { number | string_literal | boolean }

// Numbers
number = { ASCII_DIGIT+ }

// String literals
string_literal = { "\"" ~ string_content ~ "\"" }
string_content = { (!("\"") ~ ANY)* }

// Boolean values
boolean = { "true" | "false" }

// Silent whitespace
WHITESPACE = _{ " " | "\t" }

// Newlines
NEWLINE = _{ "\r\n" | "\n" | "\r" }
